import ui
// <<BEGIN_IMPORT>>// <<END_IMPORT>>

const (
	// <<BEGIN_CONST>>// <<END_CONST>>
)

[heap]
struct App {
mut:
	window &ui.Window    = unsafe { nil }
	layout = &ui.Layout
	// <<BEGIN_APP>>// <<END_APP>>
}

fn (mut app App) make_root_layout() {
	// <<BEGIN_LAYOUT>>// <<END_LAYOUT>>
	app.layout = layout
}

fn (mut app App) make_precode() {
	// <<BEGIN_PRECODE>>// <<END_PRECODE>>
}

fn (mut app App) make_postcode() {
	// <<BEGIN_POSTCODE>>// <<END_POSTCODE>>
}

// <<BEGIN_CALLBACK>>// <<END_CALLBACK>>

fn (mut app App) win_init(_ &ui.Window) {
// <<BEGIN_WINDOW_INIT>>// <<END_WINDOW_INIT>>
}

fn main() {
	mut app := App{}
	app.make_root_layout()
	app.make_precode()
	app.window = ui.window(
		// <<BEGIN_WIN_CFG>>// <<END_WINCFG>>
		on_init: app.win_init
		layout: app.layout
	)
	app.make_postcode()
	ui.run(app.window)
}
